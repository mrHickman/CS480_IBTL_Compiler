from parseTree import ParseTree
from operationType import OperationType

class TypeChecker:
    def __init__(self, parseTree):
        self.ParseTree = parseTree
        self.currentNode = self.ParseTree.getNextLeftMostNode()
        self.nodeStack = []
        self.nodeStack.append(self.ParseTree.getNextLeftMostNode())
        # child count stack for checking arg numbers, think - as uniary or binary
        self.typeStack = []
        self.typeStack.append(self.nodeStack[0].getToken().getType())
        self.checkType()
        
    def checkType(self):
        while True :
            while self.isTypeTerminal() || : # or done
                self.getNextNode()
            #the last node will all ways be the root node
            #add break condition
            #use the operationType to find valid type stuff
            break
                
    def isTypeTerminal(self):
        tempType = self.typeStack[-1]  
        if tempType == 'bool' or tempType == 'int' or  tempType == 'float' or tempType == 'string' or tempType == 'name':
            return True
        else :
            return False
        
    def getNextNode(self):
        self.nodeStack.append(self.ParseTree.getNextLeftMostNode())
        self.typeStack.append(self.nodeStack[-1].getToken().getType())
        
    def getScopeNode(self):
        currentNode = self.nodeStack[-1]
        parentNode = currentNode.getParent()
        while parentNode != self.ParseTree.getRoot() :
            currentNode = parentNode
            parentNode = currentNode.getParent()
        return currentNode
    
    def convertScopeToFloat(self):
        tempTree = ParseTree(self.getScopeNode())
        currentNode = tempTree.getNextLeftMostNode()
        while currentNode != tempTree.getRoot():
            if currentNode.getToken().getType() == 'int':
                tempTree.injectType('float')            
            currentNode = tempTree.getNextLeftMostNode()
        
        for x in range (0, len(self.typeStack)) :
            if myType == 'int':
                myType = 'float'
        
                
            
            
        #step through if int now float
        